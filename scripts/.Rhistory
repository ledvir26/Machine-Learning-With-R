imageShow(new.img)
get.cent.mb <- kmmb$centroids
new.img <- get.cent.mb[prmb,]
dim(new.img) <- c(nrow(img.resize), ncol(img.resize), 3)
imageShow(new.img)
kmmb <- MiniBatchKmeans(img.vector, clusters = 5, batch_size = 20, num_init = 5,
max_iters = 100, init_fraction = 0.2,
initializer = "kmeans++",
early_stop_iter = 10, verbose = F)
prmb <- predict_MBatchKMeans(img.vector, kmmb$centroids)
get.cent.mb <- kmmb$centroids
new.img <- get.cent.mb[prmb,]
dim(new.img) <- c(nrow(img.resize), ncol(img.resize), 3)
imageShow(new.img)
kmmb <- MiniBatchKmeans(img.vector, clusters = 64, batch_size = 20, num_init = 5,
max_iters = 100, init_fraction = 0.2,
initializer = "kmeans++",
early_stop_iter = 10, verbose = F)
kmmb
prmb <- predict_MBatchKMeans(img.vector, kmmb$centroids)
prmb
get.cent.mb <- kmmb$centroids
new.img <- get.cent.mb[prmb,]
dim(new.img) <- c(nrow(img.resize), ncol(img.resize), 3)
imageShow(new.img)
9+4+33+18+915
9+4+33+18+
44}+
9+4+33+18+9+15
88/60
114/239
116/239
118/239
220/239
88-60
protein <- read.csv("../data/tema5/protein.csv")
protein$Country <- NULL
rownames(protein) <- protein$Country
protein <- read.csv("../data/tema5/protein.csv")
rownames(protein) <- protein$Country
protein$Country <- NULL
protein.scaled <- as.data.frame(scale(protein))
library(cluster)
library(factoextra)
km <- pam(protein.scaled, 4)
km
fviz_cluster(km)
clarafit <- clara(protein.scaled, 4, samples = 5)
clarafit
130/239
126/239
128/239
AMZN <- read.csv("../data/tema6/AMZN.csv", stringsAsFactors = F)
head(AMZN)
AAPL <- read.csv("../data/tema6/AAPL.csv", stringsAsFactors = F)
FB <- read.csv("../data/tema6/FB.csv", stringsAsFactors = F)
GOOG <- read.csv("../data/tema6/GOOG.csv", stringsAsFactors = F)
AMZN <- AMZN[AMZN$Date >= '2008-01-01']
AMZN <- AMZN[AMZN$Date >= '2008-01-01',]
GOOG <- GOOG[GOOG$Date >= '2008-01-01',]
AAPL <- AAPL[AAPL$Date >= '2008-01-01',]
AAPL$Date <- as.Date(AAPL$Date)
AMZN$Date <- as.Date(AMZN$Date)
FB$Date <- as.Date(FB$Date)
GOOG$Date <- as.Date(GOOG$Date)
library(ggplot2)
ggplot(AAPL, aes(Date, Close)) +
geom_line(aes(color="Apple")) +
geom_line(AMZN, aes(color = "Amazon")) +
geom_line(FB, aes(color="Facebook")) +
geom_line(GOOG, aes(color="Google")) +
labs(color="Legend") +
ggplot(AAPL, aes(Date, Close)) +
geom_line(aes(color="Apple")) +
geom_line(AMZN, aes(color = "Amazon")) +
geom_line(FB, aes(color="Facebook")) +
geom_line(GOOG, aes(color="Google")) +
labs(color="Legend") +
scale_color_manual("",
breaks = c("Apple", "Amazon", "Facebook", "Google"),
values = c("gray", "yellow", "blue", "red")) +
ggtitle("Comparaciones de Cierre de Stocks") +
theme(plot.title = element_text(lineheight = 0.7, face = "bold"))
ggplot(AAPL, aes(Date, Close)) +
geom_line(aes(color="Apple")) +
geom_line(AMZN, aes(color = "Amazon")) +
geom_line(FB, aes(color="Facebook")) +
geom_line(GOOG, aes(color="Google")) +
labs(color="Legend") +
scale_color_manual("",
breaks = c("Apple", "Amazon", "Facebook", "Google"),
values = c("gray", "yellow", "blue", "red")) +
ggtitle("Comparaciones de Cierre de Stocks") +
theme(plot.title = element_text(lineheight = 0.7, face = "bold"))
ggplot(AAPL, aes(Date, Close)) +
geom_line(aes(color="Apple")) +
geom_line(data=AMZN, aes(color = "Amazon"))+
geom_line(data=FB, aes(color="Facebook"))+
geom_line(data=GOOG, aes(color="Google"))+
labs(color="Legend")+
scale_color_manual("",
breaks = c("Apple", "Amazon", "Facebook", "Google" ),
values = c("gray", "yellow", "blue", "red"))+
ggtitle("Comparaciones de cierre de stocks")+
theme(plot.title = element_text(lineheight = 0.7, face = "bold"))
140/239
install.packages("queantmod")
install.packages("quantmod")
install.packages("quantmod")
library(quantmod)
getSymbols("AAPL")
View(AAPL)
barChart(AAPL)
141/239
18+18+15+11+13+8
83-60
152/239
155
/
155/239
18+18+15+11+13+8
83-18
wmt <- read.csv("../data/tema6/WMT.csv", stringsAsFactors = F)
plot(wmt$Adj.Close, type = "l")
d <- diff(wmt$Adj.Close)
head(d)
View(wmt)
plot(d, type = "l")
hist(d, prob=T, ylim = c(0,0.8), breaks = 30, main = "Walmart Stocks", col = "green")
lines(density(d), lwd=3)
wmt.m <- read.csv("../data/tema6/WMT-monthly.csv", stringsAsFactors = F)
vmt.m.ts <- ts(wmt.m$Adj.Close)
d <- diff(as.numeric(vmt.m.ts))
d
wmt.m.return <- d / lag(as.numeric(wmt.m.ts), k = -1)
vmt.m.ts <- ts(wmt.m$Adj.Close)
d <- diff(as.numeric(vmt.m.ts))
d
wmt.m.return <- d / lag(as.numeric(wmt.m.ts), k = -1)
wmt.m.ts <- ts(wmt.m$Adj.Close)
d <- diff(as.numeric(vmt.m.ts))
d
wmt.m.return <- d / lag(as.numeric(wmt.m.ts), k = -1)
hist(wmt.m.return, prob = T, col = "blue")
18+15+11+13+8
152/239
142/239
153/239
154/239
155/239
155-142
11+13+8
s <- read.csv("../data/tema6/ts-example.csv")
head(s)
s.ts <- ts(s)
class(s.ts)
head(s.ts)
plot(s.ts)
s.ts.a <- ts(s, start = 2001)
s.ts.a
plot(s.ts.a)
s.ts.m <- ts(s, start = c(2001,1), frequency = 12)
s.ts.m
plot(s.ts.m)
s.ts.q <- ts(s, start = 2001, frequency = 4)
s.ts.q
plot(s.ts.q)
start(s.ts.m)
end(s.ts.m)
frequency(s.ts.m)
start(s.ts.q)
end(s.ts.q)
frequency(s.ts.q)
prices <- read.csv("../data/tema6/prices.csv")
head(prices)
prices.ts <- ts(prices, start = c(1980,1), frequency = 12)
prices.ts
plot(prices.ts)
plot(prices.ts, plot.type = "single", col = 1:2)
legend("topleft", colnames(prices.ts), col = 1:2, lty = 1)
#stl
#Seasonal Decomposition of Time Series by Loess
flour.l <- log(prices.ts[,1])
flour.stl<- stl(flour.l, s.window = "period")
plot(flour.stl)
flour.stl
11+13+8
32-11
s <- read.csv("../data/tema6/ts-example.csv")
s$sales
plot(s$sales, type = "l")
n <- 7
weights <- rep(1/n, n)
weights
s.fil.1 <- filter(s$sales, filter = weights, sides = 2)
lines(s.fil.1, col = "blue", lwd = 3)
s.fil.2 <- filter(s$sales, filter = weights, sides = 1)
lines(s.fil.2, col = "red", lwd = 3)
145/239
155/239
inf <- read.csv("../data/tema6/infy-monthly.csv")
head(inf)
inf <- read.csv("../data/tema6/INFY-monthly.csv")
tail(inf)
inf.ts <- ts(inf$Adj.Close, start=c(1999,3), frequency = 12)
inf.ts
plot(inf.ts)
inf.hw <- HoltWinters(inf.ts)
plot(inf.hw, col = "blue", col.predicted = "red")
inf.hw$SSE
inf.hw$alpha
inf.hw$beta
inf.hw$gamma
head(inf.hw$fitted)
install.packages("forecast")
library(forecast)
infy.fore <- forecast(inf.hw, h=24)
plot(infy.fore)
infy.fore$lower
infy.fore$upper
#modelo autorregresivo integrado de media mÃ³vil
inf <- read.csv("../data/tema6/INFY-monthly.csv")
inf.ts <- ts(inf$Adj.Close, start = c(1999,3), frequency = 12)
inf.arima <- auto.arima(inf.ts)
summary(inf.arima)
inf.fore <- forecast(inf.arima, h = 12)
plot(inf.fore, col = "red",
fcol = "green")
# Scatter PLot
install.packages("ggplot2")
library(ggplot2)
auto <- read.csv("../data/tema7/auto-mpg.csv", stringsAsFactors = F)
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C"))
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C", "8C"))
head(auto)
auto <- read.csv("../data/tema7/auto-mpg.csv", stringsAsFactors = F)
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C", "8C"))
head(auto)
library(ggplot2)
auto <- read.csv("../data/tema7/auto-mpg.csv", stringsAsFactors = F)
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C", "8C"))
head(auto)
plot <- ggplot(auto, aes(weight, mpg))
plot <- geom_point()
plot <- ggplot(auto, aes(weight, mpg))
plot + geom_point()
plot <- ggplot(auto, aes(weight, mpg))
plot <- geom_point()
plot <- ggplot(auto, aes(weight, mpg))
plot + geom_point()
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders)))
plot + geom_smooth(method = "lm", se = F, col = "green")
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) + geom_smooth(method = "lm", se = F, col = "green")
AAPL = read.csv("../data/tema6/AAPL.csv", stringsAsFactors = F)
AMZN = read.csv("../data/tema6/AMZN.csv", stringsAsFactors = F)
FB = read.csv("../data/tema6/FB.csv", stringsAsFactors = F)
GOOG = read.csv("../data/tema6/GOOG.csv", stringsAsFactors = F)
str(AAPL)
#Hacemos el casting a fecha de las mismas...
AAPL$Date = as.Date(AAPL$Date)
library(quantmod)
getSymbols("AAPL")
barChart(AAPL)
chartSeries(AAPL, TA = "NULL")
candleChart(AAPL, up.col = "black",
dn.col="red", theme = "white")
head(AAPL)
chartSeries(AAPL, TA = "NULL")
chartSeries(AAPL, TA = "NULL")
candleChart(AAPL, up.col = "black",
dn.col="red", theme = "white")
chartSeries(AAPL[,4],TA = "addMACD()")
auto <- read.csv("../data/tema7/auto-mpg.csv", stringsAsFactors = F)
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C", "8C"))
head(auto)
plot <- ggplot(auto, aes(weight, mpg))
plot <- geom_point()
plot <- ggplot(auto, aes(weight, mpg))
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) + geom_smooth(method = "lm",
se = F, col = "green")
library(ggplot2)
auto <- read.csv("../data/tema7/auto-mpg.csv", stringsAsFactors = F)
auto$cylinders <- factor(auto$cylinders,
labels = c("3C", "4C", "5C", "6C", "8C"))
head(auto)
plot <- ggplot(auto, aes(weight, mpg))
plot <- geom_point()
plot <- ggplot(auto, aes(weight, mpg))
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) + geom_smooth(method = "lm",
se = F, col = "green")
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) +
geom_smooth(method = "lm",se = F, col = "green") +
facet_grid(cylinders~.)
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) +
geom_smooth(method = "lm",se = F, col = "green") +
facet_grid(cylinders~.) +
theme_bw(base_family = "Calibri", base_size = 10)
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) +
geom_smooth(method = "lm",se = F, col = "green") +
facet_grid(cylinders~.) +
theme_bw(base_family = "Arial", base_size = 10)
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) +
geom_smooth(method = "lm",se = F, col = "green") +
facet_grid(cylinders~.) +
theme_bw(base_family = "Arial", base_size = 10)+
labs(x="Peso")+labs(y="Millas por Galeón")+
labs(title="Consumo vs Peso")
plot + geom_point(alpha = 1/2, size = 5,
aes(color = factor(cylinders))) +
geom_smooth(method = "lm",se = T, col = "green") +
#facet_grid(cylinders~.) +
theme_bw(base_family = "Arial", base_size = 10)+
labs(x="Peso")+labs(y="Millas por Galeón")+
labs(title="Consumo vs Peso")
# Line Charts
library(ggplot2)
150/239
155/239
mtcars <- read.csv("../data/tema7/mtcars.csv", stringsAsFactors = F)
head(mtcars)
plot <- ggplot(mtcars, aes(wt, mpg))
plot + geom_line()
plot + geom_line(linetype = "dashed")
plot + geom_line(color = "red")
plot + geom_line(linetype = "dashed", color = "red")
plot + geom_line(aes(color = as.factor(carb)))
# Bar Graphs
library(ggplot2)
bike <- read.csv("../data/tema7/daily-bike-rentals.csv")
bike$season <- factor(bike$season,
levels = c(1,2,3,4),
labels = c("Invierno", "Primavera", "Verano", "Invierno"))
bike$weathersit <- factor(bike$weathersit,
levels = c(1,2,3),
labels = c("Buen tiempo", "Día nublado", "Mal tiempo"))
library(dplyr)
bike.sum <- bike %>5
bike.sum <- bike %>%
group_by(season, workingday) %>%
summarize(reantal = sum(cnt))
bike.sum
165/239
bike <- read.csv("../data/tema7/daily-bike-rentals.csv")
bike$season <- factor(bike$season,
levels = c(1,2,3,4),
labels = c("Invierno", "Primavera", "Verano", "OtoÃ±o"))
bike$workingday <- factor(bike$workingday,
levels = c(0,1),
labels = c("DÃ­a libre", "DÃ­a de trabajo"))
bike$weathersit <- factor(bike$weathersit,
levels = c(1,2,3),
labels = c("Buen tiempo", "DÃ­a nublado", "Mal tiempo"))
library(dplyr)
bike.sum = bike %>%
group_by(season, workingday) %>%
summarize(reantal = sum(cnt))
bike.sum
ggplot(bike.sum, aes(x = season, y = reantal,
fill = workingday, label = scales::comma(reantal))) +
geom_bar(show.legend = T, stat = "identity", fill="lightblue", colour = "black") +
labs(title = "Alquileres de bicicletas por estaciÃ³n y dÃ­a") +
scale_y_continuous(labels = scales::comma) +
geom_text(size = 3, position = position_stack(vjust = 0.5))
geiser <- read.csv("../data/tema7/geiser.csv")
head(geiser)
plot <- ggplot(geiser, aes(x=waiting))
plot + geom_histogram()
plot + geom_histogram(binwidth = 5,
fill="white", colour = "black")
ggplot(geiser, aes(x=waiting, y = ..density..))+
geom_histogram(fill="cornsilk", color = "grey60", size=.2)+
geom_density() + xlim(35, 105)
ggplot(geiser, aes(x=eruptions, y = ..density..))+
geom_histogram(fill="cornsilk", color = "grey60", size=.2)+
geom_density() + xlim(0,7)
#Mosaic PLot
library(stats)
mtcars <- read.csv("../data/tema7/mtcars.csv")
head(mtcars)
mosaicplot(~ gear + carb, data = mtcars, color = 2:5, las = 1)
mosaicplot(~ gear + carb, data = mtcars, color = 2:5, las = 1)
mosaicplot(~ gear + carb, data = mtcars, color = 1:6, las = 1)
mosaicplot(~ gear + carb, data = mtcars, color = 2:7, las = 1)
#Tree Maps
install.packages("treemap")
library(treemap)
branch <- c(rep("branch-1", 4), rep("branch-2", 2), rep("branch-3",3))
subbranch <- paste("subbranch", c(1,2,3,4,1,2,1,2,3), sep = "-")
values <- c(15,4,22,13,11,8,6,1,25)
data <- data.frame(branch, subbranch, values)
treemap(data, index = c("branch", "subbranch"),
vSize = "values", type = "index")
posts <- read.csv("../data/tema7/post-data.csv")
head(posts)
treemap(posts, index = c("category", "comments"),
vSize = "views", type = "index")
library(ggplot2)
library(corrplot)
mtcars <- read.csv("../data/tema7/mtcars.csv")
21+11+15+13+12+18+17+19+17+9
152-120
152-21
131-120
mtcars <- read.csv("../data/tema7/mtcars.csv")
head(mtcars)
mtcars$X = NULL
mtcars.cor <- cor(mtcars, method = "pearson")
round(mtcars.cor, digits = 2)
corrplot(mtcars.cor)
corrplot(mtcars.cor, method = "shade",
shade.col = NA, tl.col = "black",
tl.srt = 45)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF",
"#77AADD", "#4477AA"))
corrplot(mtcars.cor, method = "square",
tl.col = "black",
tl.srt = 45, col = col(200),
addCoef.col = "black",
order = "AOE",
type = "upper",
diag = F,
addshade = "all")
155/239
165/239
corrplot(mtcars.cor, method = "square",
tl.col = "black",
tl.srt = 45, col = col(200),
addCoef.col = "black",
order = "AOE",
diag = F,
addshade = "all")
library(reshape2)
mtcars.melted <- melt(mtcars.cor)
head(mtcars.cor)
head(mtcars.melted)
ggplot(data = mtcars.melted,
aes(x=Var1, y=Var2,fill=value))+
geom_tile()
get_lower_triangle <- function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
get_upper_triangle <- function(cormat){
cormat[lower.tri(cormat)] <- NA
return(cormat)
}
reorder_cormat <- function(cormat){
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <- cormat[hc$order, hc$order]
}
cormat <- reorder_cormat(mtcars.cor)
cormat.ut <- get_upper_triangle(cormat)
cormat.ut.melted <- melt(cormat.ut, na.rm = T)
ggplot(cormat.ut.melted, aes(Var2, Var1, fill = value)) +
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red",
mid = "white", midpoint = 0,
limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust=1,
size = 12, hjust=1))+
coord_fixed()
#Redes
library(igraph)
g.dir <- graph(edges = c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6, 5,6), n=6)
g.n_dir <- graph(edges = c(1,2, 2,3, 2,4, 1,4,
5,5, 3,6, 5,6), n=6, directed = F)
plot(g.dir)
plot(g.n_dir)
g_isolated <- graph(edges = c("Juan", "MarÃ­a",
"MarÃ­a", "Ana",
"Ana", "Juan",
"JosÃ©", "MarÃ­a",
"Pedro", "JosÃ©",
"Joel", "Pedro"),
isolates = c( "Carmen", "Antonio",
"Mario", "Vicente"))
par(mfrow = c(1,1))
plot(g_isolated, edge.arrow.size = 1,
vertex.color="gold",vertex.size = 15,
vertex.frame.color = "gray",
vertex.label.color = "black",
vertex.label.cex = 0.8,
vertex.label.dist = 2,
edge.curved=0.2)
158/239
(158/239)*100
13
12
18
13+12+18+17+19+17+9
105-60
18+17+19+17+9
80-18
62-17
60*4
60/2
