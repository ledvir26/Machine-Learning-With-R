View(banknote)
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
set.seed(2021)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
0.08685446 +0.02633903
0.08685446 +0.02316807
0.08685446 + 0.02010304
0.08685446 +0.01814324
0.08685446 +0.01746860
set.seed(2018)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
0.1452381 + 0.01943149
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
install.packages(c("rpart", "rpart.plot", "caret"))
library(caret)
library(rpart)
library(rpart.plot)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
#Poda
#Xerror(min)+xstd= xerror
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
View(banknote)
pred.pruned <- predict(mod.pruned, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
library(caret)
library(rpart)
library(rpart.plot)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
#Poda
#Xerror(min)+xstd= xerror
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod.pruned, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
mod$cptable
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod.pruned, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
pred.pruned <- predict(mod, banknote[-training.ids,], type = "class")
pred.pruned <- predict(mod, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
library(caret)
library(rpart)
library(rpart.plot)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
mod.pruned <- prune(mod, mod$cptable[8, "CP"])
mod.pruned <- prune(mod, mod$cptable[8, "CP"])
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod.pruned, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
mod$cptable
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod.pruned, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,]$class, pred.pruned, dnn = c("Actual", "Predicho)
mod <- rpart(class ~ ., data = banknote[training.ids,],
method = "class",
control = rpart.control(minsplit = 20, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
mod$cptable
#Poda
#Xerror(min)+xstd= xerror
mod.pruned <- prune(mod, mod$cptable[6, "CP"])
prp(mod.pruned, type = 2, extra = 104, nn = TRUE,
fallen.leaves =  TRUE, faclen = 4 , varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod.pruned, banknote[-training.ids,], type="class")
table(banknote[-training.ids,]$class, pred.pruned,
dnn = c("Actual", "Predicho"))
pred.pruned2 <- predict(mod.pruned, banknote[-training.ids,], type = "prob")
head(pred.pruned)
head(pred.pruned2)
library(ROCR)
pred <- prediction(pred.pruned2[,2], banknote[-training.ids, "class"])
perf <- performance(pred, "tpr", "fpr")
plot(perf)
lines(par()$usr[1:2], par()$usr[3:4])
install.packages("randomForest")
library(caret)
library(randomForest)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
set.seed(2018)
training.ids <- createDataPartition(banknote$class, p = 0.7, list = FALSE)
mod <- randomForest(x = banknote[training.ids, 1:4],
y = banknote[training.ids, 5],
ntree = 500,
keep.forest = TRUE)
mod <- randomForest(x = banknote[training.ids, 1:4],
y = banknote[training.ids, 5],
ntree = 500,
keep.forest = TRUE)
View(mod)
yes
five
fewer
pred <- predict(mod, banknote[training.ids,])
table(banknote[-training.ids,"class"], pred, dnn =c c("Actual","Predicho"))
table(banknote[-training.ids,"class"], pred, dnn = c("Actual","Predicho"))
table(banknote[-training.ids,"class"], pred, dnn = c("Actual","Predicho"))
pred <- predict(mod, banknote[training.ids,])
table(banknote[-training.ids,"class"], pred, dnn = c("Actual","Predicho"))
training.ids <- createDataPartition(banknote$class, p = 0.7, list = FALSE)
mod <- randomForest(x = banknote[training.ids, 1:4],
y = banknote[training.ids, 5],
ntree = 500,
keep.forest = TRUE)
pred <- predict(mod, banknote[training.ids,])
table(banknote[-training.ids,"class"], pred, dnn = c("Actual","Predicho"))
library(ROCR)
pred <- prediction(pred.pruned2[,2], banknote[-training.ids, "class"])
mod <- randomForest(x = banknote[training.ids, 1:4],
y = banknote[training.ids, 5],
ntree = 500,
keep.forest = TRUE)
pred <- predict(mod, banknote[-training.ids,], type = "class")
table(banknote[-training.ids,"class"], pred, dnn= c("Actual", "Predicho"))
library(ROCR)
probs <- predict(mod, banknote[-training.ids,], type = "prob")
head(probs)
pred <- prediction(probs[,2], banknote[-training.ids,"class"])
perf <- performance(pred, "tpr", "fpr")
plot(perf)
library(caret)
library(e1071)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
banknote
banknote$class = factor(banknote$class)
set.seed(2018)
t.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- svm(class ~ ., data = banknote[t.ids, ] )
table(banknote[t.ids,"class"], fitted((mod), dnn = c("Actual","Predicho")))
table(banknote[t.ids,"class"], fitted(mod), dnn = c("Actual","Predicho"))
pred <- predict(mod, banknote[-t.ids,])
table(banknote[-t.ids,])
table(banknote[-t.ids, "class"], pred, dnn = c("Actual","Predicho"))
plot(mod, data=banknote[t.ids,],skew ~viriance)
plot(mod, data=banknote[t.ids,],skew ~variance)
tuned <- tune.svm(class ~., data = banknote[t.ids,],
gamma = 10^(-6:-1), cost = 10^(1:2))
summary(tuned)
library(e1071)
library(naivebayes)
library(caret)
ep <- read.csv("../data/tema3/electronics-purchase.csv")
set.seed(2018)
t.ids <- createDataPartition(ep$Purchase, p = 0.67, list = F)
mod <- naiveBayes(Purchase ~ ., data = ep[]t.ids)
mod <- naiveBayes(Purchase ~ ., data = ep[t.ids,])
mod
pred <- predict(mod, ep[-t.ids,])
tab <- table(ep[-t.ids,]$Purchase, pred, dnn = c("Actual", "Predicha"))
confusionMatrix(tab)
library(class)
library(caret)
vac <- read.csv("../data/tema3/vacation-trip-classification.csv")
View(vac)
vac$Income.z <- scale(vac$Income)
vac$Family_size.z <- scale(vac$Family_size)
set.seed(2018)
t.ids <- createDataPartition(vac$Result, p = 0.5, list = F)
train <- vac[t.ids, ]
temp <- vac[-t.ids, ]
v.ids <- createDataPartition(temp$Result, p = 0.5, list = F)
val <- temp[v.ids,]
test <- temp[-v.ids, ]
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 1)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 2)
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 2)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 3)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 4)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 5)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 1)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 2)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 2)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 3)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 5)
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 4)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 6)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
print(tab)
cat("------------\n")
cat(paste("Matriz de confusión para k= ",k, "\n"))
cat("===============\n")
knn.automate(train[,4:5], val[,4:5], train[,3], val[,3], 1,8)
knn.automate <- function(tr_predictors, val_predictors, tr_target,
val_target, start_k, end_k){
for (k in start_k:end_k) {
pred <- knn(tr_predictors, val_predictors, tr_target, l)
tab <- table(val_target, pred, dnn = c("Actual", "Predichos"))
cat(paste("Matriz de confusión para k= ",k, "\n"))
cat("===============\n")
print(tab)
cat("------------\n")
}
}
knn.automate(train[,4:5], val[,4:5], train[,3], val[,3], 1,8)
pred <- knn(tr_predictors, val_predictors, tr_target, k)
cat("===============\n")
knn.automate <- function(tr_predictors, val_predictors, tr_target,
val_target, start_k, end_k){
for (k in start_k:end_k) {
pred <- knn(tr_predictors, val_predictors, tr_target, k)
tab <- table(val_target, pred, dnn = c("Actual", "Predichos"))
cat(paste("Matriz de confusión para k= ",k, "\n"))
cat("===============\n")
print(tab)
cat("------------\n")
}
knn.automate(train[,4:5], val[,4:5], train[,3], val[,3], 1,8)
knn.automate <- function(tr_predictors, val_predictors, tr_target,
val_target, start_k, end_k){
for (k in start_k:end_k) {
pred <- knn(tr_predictors, val_predictors, tr_target, k)
tab <- table(val_target, pred, dnn = c("Actual", "Predichos"))
cat(paste("Matriz de confusión para k= ",k, "\n"))
cat("===============\n")
print(tab)
cat("------------\n")
}
}
knn.automate(train[,4:5], val[,4:5], train[,3], val[,3], 1,8)
library(caret)
library(e1071)
banknote <- read.csv("../data/tema3/banknote-authentication.csv")
banknote$class = factor(banknote$class)
set.seed(2018)
t.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
mod <- svm(class ~ ., data = banknote[t.ids, ] )
table(banknote[t.ids,"class"], fitted(mod), dnn = c("Actual","Predicho"))
pred <- predict(mod, banknote[-t.ids,])
table(banknote[-t.ids, "class"], pred, dnn = c("Actual","Predicho"))
plot(mod, data=banknote[t.ids,],skew ~variance)
tuned <- tune.svm(class ~., data = banknote[t.ids,],
gamma = 10^(-6:-1), cost = 10^(1:2))
library(class)
library(caret)
vac <- read.csv("../data/tema3/vacation-trip-classification.csv")
vac$Income.z <- scale(vac$Income)
vac$Family_size.z <- scale(vac$Family_size)
set.seed(2018)
t.ids <- createDataPartition(vac$Result, p = 0.5, list = F)
train <- vac[t.ids, ]
temp <- vac[-t.ids, ]
v.ids <- createDataPartition(temp$Result, p = 0.5, list = F)
val <- temp[v.ids,]
test <- temp[-v.ids, ]
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 5)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 6)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
knn.automate <- function(tr_predictors, val_predictors, tr_target,
val_target, start_k, end_k){
for (k in start_k:end_k) {
pred <- knn(tr_predictors, val_predictors, tr_target, k)
tab <- table(val_target, pred, dnn = c("Actual", "Predichos"))
cat(paste("Matriz de confusión para k= ",k, "\n"))
cat("===============\n")
print(tab)
cat("------------\n")
}
}
knn.automate(train[,4:5], val[,4:5], train[,3], val[,3], 1,8)
trcntrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
caret_knn_fit <- train(Result ~ Family_size.z + Income, data=train,
method ="knn", trControl = trcontrol,
preProcess = c("center", "scale"),
tuneLength = 10)
trcntrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
caret_knn_fit <- train(Result ~ Family_size.z + Income, data=train,
method ="knn", trControl = trcontrol,
preProcess = c("center", "scale"),
tuneLength = 10)
caret_knn_fit <- train(Result ~ Family_size.z + Income, data=train,
method ="knn", trControl = trcntrl,
preProcess = c("center", "scale"),
tuneLength = 10)
caret_knn_fit
pred5 <- knn(train[,4:5], val[,4:5], train[,3], k=5, prob=T)
pred5
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
library(nnet)
library(caret)
bn <- read.csv("../data/tema3/banknote-authentication.csv")
bn$class <- factor(bn$class)
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- nnet(class ~ ., data = bn[t.id,],
size = 3, maxit = 10000, decay = 0.001, rang = 0.05)
mod <- nnet(class ~ ., data = bn[t.id,],
size = 3, maxit = 10000, decay = 0.001, rang = 0.05,
na.action = na.omit, skip = T)
# ranf * max(|variables|) ~ 1
apply(bn, 2, max)
pred <. predict(mod, newdata = bn[-t.id,], type = "raw")
pred <- predict(mod, newdata = bn[-t.id,], type = "raw")
perf <- perfo
perf <- performance(prediction(pred2, bn[-t.id, "class"]), "tpr","fpe")
library(ROCR)
pred <- predict(mod, newdata = bn[-t.id,], type = "raw")
perf <- performance(prediction(pred2, bn[-t.id, "class"]), "tpr","fpe")
perf <- performance(prediction(pred2, bn[-t.id, "class"]),
"tpr","fpr")
perf <- performance(prediction(pred2, bn[-t.id, "class"]),
"tpr","fpr")
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- nnet(class ~ ., data = bn[t.id,],
size = 3, maxit = 10000, decay = 0.001, rang = 0.05,
na.action = na.omit, skip = T)
# ranf * max(|variables|) ~ 1
apply(bn, 2, max)
library(ROCR)
pred <- predict(mod, newdata = bn[-t.id,], type = "raw")
perf <- performance(prediction(pred2, bn[-t.id, "class"]),
"tpr","fpr")
pred2 <- predict(mod, newdata = bn[-t.id,], type = "raw")
perf <- performance(prediction(pred2, bn[-t.id,"class"]),
"tpr", "fpr")
pred2 <- predict(mod, newdata = bn[-t.id,], type = "raw")
perf <- performance(prediction(pred2, bn[-t.id,"class"]),
"tpr", "fpr")
plot(perf)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(MASS)
library(caret)
bn <- read.csv("../data/tema3/banknote-authentication.csv")
bn$class <- factor(bn$class)
set.seed(2018)
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- lda(bn[t.id, 1:4], bn[t.id,5])
bn[t.ids, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
library(MASS)
library(caret)
bn <- read.csv("../data/tema3/banknote-authentication.csv")
bn$class <- factor(bn$class)
set.seed(2018)
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- lda(bn[t.id, 1:4], bn[t.id,5])
bn[t.ids, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
bn[t.ids, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
bn <- read.csv("../data/tema3/banknote-authentication.csv")
bn$class <- factor(bn$class)
set.seed(2018)
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- lda(bn[t.id, 1:4], bn[t.id,5])
bn[t.ids, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
bn <- read.csv("../data/tema3/banknote-authentication.csv")
bn$class <- factor(bn$class)
set.seed(2018)
t.id <- createDataPartition(bn$class, p = 0.7, list = F)
mod <- lda(bn[t.id, 1:4], bn[t.id,5])
bn[t.ids, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
mod <- lda(bn[t.id,1:4], bn[t.id,5])
bn[t.id, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
bn[t.id, "Pred"] <- predict(mod, bn[t.id, 1:4])$class
table(bn[t.id, "class"], bn[t.id, "Pred"], dnn = c("Actual", "Predichos"))
bn[-t.id, "Pred"] <- predict(mod, bn[-t.id, 1:4])$class
table(bn[-t.id, "class"], bn[-t.id, "Pred"], dnn = c("Actual", "Predichos"))
View(bn)
library(caret)
bh <- read.csv("../data/tema3/boston-housing-logistic.csv")
bh <- read.csv("../data/tema3/boston-housing-logistic.csv")
View(bh)
bh$class <- factor(bh$CLASS, levels = c(0,1))
set.seed(2018)
t.id <- createDataPartition(bh$CLASS, p=0.7, list=F)
mod <- glm(CLASS ~ ., data = bh[t.id, ], family = binomial)
bh <- read.csv("../data/tema3/boston-housing-logistic.csv")
bh$CLASS <- factor(bh$CLASS, levels = c(0,1))
set.seed(2018)
t.id <- createDataPartition(bh$CLASS, p=0.7, list=F)
mod <- glm(CLASS ~ ., data = bh[t.id, ], family = binomial)
summary(mod)
bh[-t.id, "PROB_SUCCESS"] <- predict(mod, newdata = bh[-t.id,], type="response")
bh[-t.id, "PRED_50"] <- ifelse(bh[-t.id, "PROB_SUCCESS"]>=0.5, 1, 0)
table(bh[-t.id,"CLASS"], bh[-t.id,"PRED_50"], dnn=c("Actual","Predicho"))
